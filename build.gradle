plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
}
ext.profile = project.hasProperty('profile') ? project.profile : 'local'
println("현재 profile : " + profile)

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /* Build */
    implementation 'org.springframework.boot:spring-boot-gradle-plugin:3.2.1'

    /* PostgreSQL */
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.0'

    /* Validator */
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.1'

    /* Spring Security */
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    /* Spring Email */
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.2.1'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'

    /* JWT */
    implementation 'com.auth0:java-jwt:4.4.0'

    /* Kafka */
    implementation 'org.apache.kafka:kafka-clients:3.6.1'

    /* Configuration Processor */
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.2.0'

    if (gradle.startParameter.taskNames.any { it.contains('bootJar') } && profile.contains('dev')) {
        /* Spring Cloud Gateway */
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway:4.0.7'

        /* Netflix Eureka */
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.3'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources-env/${profile}"
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
